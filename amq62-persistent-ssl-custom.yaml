kind: Template
apiVersion: v1
metadata:
  name: amq62-persistent-ssl-custom
  annotations:
    description: Application template for JBoss A-MQ brokers. These can be deployed as standalone or in a mesh. This template supports SSL and requires usage of OpenShift secrets.
    iconClass: icon-jboss
    version: 1.2.0
labels:
  template: amq62-persistent-ssl-custom
  xpaas: 1.2.0
parameters:
- name: APPLICATION_NAME
  value: broker
  required: true
  description: The name for the application.
- name: SOURCE_REPOSITORY_URL
  value: https://github.com/jamestenglish/amq62-persistent-ssl-custom.git
  required: true
  description: Git source URI for application
- name: SOURCE_REPOSITORY_REF
  value: master
  required: true
  description: Git branch/tag reference
- name: CONTEXT_DIR
  value: deployment
  required: false
  description: Path within Git project to build; empty for root project directory.
- name: MQ_PROTOCOL
  value: openwire
  required: false
  description: 'Protocols to configure, separated by commas. Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. SSL variants of these protocols will be configured automaticaly.'
- name: MQ_USERNAME
  value: osUser
  required: false
  description: User name for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.
- name: MQ_PASSWORD
  generate: expression
  from: '[a-zA-Z0-9]{8}'
  required: false
  description: Password for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.
- name: VOLUME_CAPACITY
  value: 512Mi
  required: true
  description: Size of persistent storage for database volume.
- name: AMQ_SECRET
  value: amq-app-secret
  required: true
  description: Name of a secret containing SSL related files.
- name: AMQ_TRUSTSTORE
  value: broker.ks
  required: true
  description: SSL trust store filename
- name: AMQ_TRUSTSTORE_PASSWORD
  value: amq-demo
  required: false
  description: SSL trust store password
- name: AMQ_KEYSTORE
  value: broker.ks
  required: true
  description: SSL key store filename
- name: AMQ_KEYSTORE_PASSWORD
  value: amq-demo
  required: false
  description: Password for accessing SSL keystore
- name: AMQ_MESH_DISCOVERY_TYPE
  value: kube
  required: false
  description: The discovery agent type to use for discovering mesh endpoints. 'dns' will use OpenShift's DNS service to resolve endpoints. 'kube' will use Kubernetes REST API to resolve service endpoints. If using 'kube' the service account for the pod must have the 'view' role, which can be added via 'oc policy add-role-to-user view system:serviceaccount:<namespace>:default' where <namespace> is the project namespace.
- name: AMQ_STORAGE_USAGE_LIMIT
  value: 1 gb
  required: false
  description: The A-MQ storage usage limit
- name: IMAGE_STREAM_NAMESPACE
  value: openshift
  required: true
  description: Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-amq-62:1.3-2
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-amq-claim
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}


- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-amq
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}-amq
    strategy:
      type: Rolling
      rollingParams:
        intervalSeconds: 1
        maxSurge: 0
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}-amq
        name: ${APPLICATION_NAME}-amq
      spec:
        containers:
        - env:
          - name: AMQ_USER
            value: ${MQ_USERNAME}
          - name: AMQ_PASSWORD
            value: ${MQ_PASSWORD}
          - name: AMQ_TRANSPORTS
            value: ${MQ_PROTOCOL}
          - name: AMQ_MESH_DISCOVERY_TYPE
            value: ${AMQ_MESH_DISCOVERY_TYPE}
          - name: AMQ_MESH_SERVICE_NAME
            value: ${APPLICATION_NAME}
          - name: AMQ_MESH_SERVICE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AMQ_KEYSTORE_TRUSTSTORE_DIR
            value: /etc/amq-secret-volume
          - name: AMQ_TRUSTSTORE
            value: ${AMQ_TRUSTSTORE}
          - name: AMQ_TRUSTSTORE_PASSWORD
            value: ${AMQ_TRUSTSTORE_PASSWORD}
          - name: AMQ_KEYSTORE
            value: ${AMQ_KEYSTORE}
          - name: AMQ_KEYSTORE_PASSWORD
            value: ${AMQ_KEYSTORE_PASSWORD}
          - name: AMQ_STORAGE_USAGE_LIMIT
            value: ${AMQ_STORAGE_USAGE_LIMIT}
          image: jboss-amq-62
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}-amq
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 5671
            name: amqp-ssl
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 8883
            name: mqtt-ssl
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61612
            name: stomp-ssl
            protocol: TCP
          - containerPort: 61616
            name: tcp
            protocol: TCP
          - containerPort: 61617
            name: tcp-ssl
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/amq/bin/readinessProbe.sh
          volumeMounts:
          - mountPath: /etc/amq-secret-volume
            name: broker-secret-volume
            readOnly: true
          - mountPath: /opt/amq/data
            name: ${APPLICATION_NAME}-amq-pvol
            readOnly: false
        serviceAccount: amq-service-account
        terminationGracePeriodSeconds: 60
        volumes:
        - name: broker-secret-volume
          secret:
            secretName: ${AMQ_SECRET}
        - name: ${APPLICATION_NAME}-amq-pvol
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-amq-claim
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-amq
        from:
          kind: ImageStream
          name: ${APPLICATION_NAME}
    - type: ConfigChange

- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    annotations:
      description: Service for all the protocols (not all may be enabled!)
    labels:
      application: ${APPLICATION_NAME}
  spec:
    ports:
    - name: tcp
      port: 61616
      targetPort: 61616
    - name: tcp-ssl
      port: 61617
      targetPort: 61617
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: amqp-ssl
      port: 5671
      targetPort: 5671
    - name: mqtt
      port: 1883
      targetPort: 1883
    - name: mqtt-ssl
      port: 8883
      targetPort: 8883
    - name: stomp
      port: 61613
      targetPort: 61613
    - name: stomp-ssl
      port: 61612
      targetPort: 61612
    selector:
      deploymentConfig: ${APPLICATION_NAME}-amq


